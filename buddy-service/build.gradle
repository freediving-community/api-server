plugins {
    id 'java'
}

group = 'com.freediving.buddy-service'
version = ''

// 사용자 정의 속성
ext {
    set('springCloudVersion', "2023.0.0")
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

dependencies {
    // Common
    implementation project(':common')

    // Spring Boot
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // Discovery
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'

    // Data
    runtimeOnly 'com.h2database:h2'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    // Swagger
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'

    // postgres
    runtimeOnly 'org.postgresql:postgresql'

    // kafka
    implementation 'org.springframework.kafka:spring-kafka'

    // FeignClient
    implementation "org.springframework.cloud:spring-cloud-starter-openfeign"

    // QueryDSL
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    // test
    testImplementation platform('org.junit:junit-bom:5.9.1')
    testImplementation 'org.junit.jupiter:junit-jupiter'


}

jar {
    enabled = false

}
// QueryDSL
def querydslSrcDir = 'src/main/generated'
clean {
    delete file(querydslSrcDir)
}
tasks.withType(JavaCompile) {
    options.generatedSourceOutputDirectory = file(querydslSrcDir)
}
sourceSets {
    main.java.srcDirs += [querydslSrcDir]
}

test {
    useJUnitPlatform()
}