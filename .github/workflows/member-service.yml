name: CI & CD for member-service

on:
  push:
    branches: [ "feat/#41" ]

env:
  SERVICE_NAME: member-service
  S3_BUCKET_NAME: buddyme-bucket
  CODE_DEPLOY_APPLICATION_NAME: service-codedeploy
  CODE_DEPLOY_DEPLOYMENT_GROUP: member-service-codedeploy

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
      - name: Create application-dev.yml
        run: |
          touch ./member-service/src/main/resources/application-dev.yml
          echo "${{ secrets.MEMBER_APPLICATION_DEV_YML }}" > ./member-service/src/main/resources/application-dev.yml

      - name: Build with Gradle
        run: |
          ./gradlew member-service:build

      # 전송할 파일을 담을 디렉토리 생성 (member-service/deploy)
      - name: Make Directory for deliver
        run: mkdir ./member-service/deploy

      # Jar 파일 Copy
      - name: Copy Jar
        run: |
          chmod +x ./member-service/build/libs/*.jar
          cp ./member-service/build/libs/*.jar ./member-service/deploy/
          cp ./member-service/appspec.yml ./member-service/deploy/
          cp -r ./member-service/scripts ./member-service/deploy/

      # 압축파일 형태로 전달
      - name: Make zip file
        run: |
          zip -r ./member-service/member-service.zip ./member-service/deploy

      # S3 Bucket으로 copy
      - name: Deliver to AWS S3
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.DEPLOY_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.DEPLOY_SECRET_ACCESS_KEY }}
        run: |
          aws s3 cp \
          --region ap-northeast-2 \
          --acl private ./member-service/member-service.zip s3://${{ env.S3_BUCKET_NAME }}/deploy/member-service.zip

      # Deploy
      - name: Deploy
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.DEPLOY_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.DEPLOY_SECRET_ACCESS_KEY }}
        run: |
          aws deploy create-deployment \
          --application-name ${{ env.CODE_DEPLOY_APPLICATION_NAME }} \
          --deployment-group-name ${{ env.CODE_DEPLOY_DEPLOYMENT_GROUP }} \
          --file-exists-behavior OVERWRITE \
          --ignore-application-stop-failures \
          --s3-location bucket=${{ env.S3_BUCKET_NAME }},bundleType=zip,key=deploy/member-service.zip \
          --region ap-northeast-2