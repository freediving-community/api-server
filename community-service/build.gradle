plugins {
    id 'java'
}

bootJar { enabled = true }
jar { enabled = false }
ext {
    set('springCloudVersion', "2023.0.0")
}

//group = 'com.freediving.communityservice'
//version = '0.0.1'

dependencies {
    implementation project(':common')
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter'
//    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'

    // QueryDSL
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

//    runtimeOnly 'org.postgresql:postgresql'
    runtimeOnly 'com.h2database:h2'

    testImplementation 'com.h2database:h2'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation platform('org.junit:junit-bom:5.9.1')
    testImplementation 'org.junit.jupiter:junit-jupiter'
    testImplementation 'com.h2database:h2'

//    implementation 'org.springframework.data:spring-data-rest-hal-explorer'
//    implementation 'org.springframework.boot:spring-boot-starter-data-rest'

//    implementation 'org.springframework.boot:spring-boot-starter-actuator'

}

// QueryDSL
def querydslSrcDir = 'src/main/generated'
clean {
    delete file(querydslSrcDir)
}
tasks.withType(JavaCompile) {
    options.generatedSourceOutputDirectory = file(querydslSrcDir)
}
sourceSets {
    main.java.srcDirs += [querydslSrcDir]
}

test {
    useJUnitPlatform()
}
