server:
  port: 0 # random port

debug: false

management.endpoints.web.exposure.include: "*"

logging:
  level:
    com.freediving.communityservice: debug
    org.springframework.web.servlet: debug
    org.hibernate.type.descriptor.sql.BasicBinder: trace

spring:
  threads:
    virtual:
      enabled: true
  profiles.active: local
  output:
    ansi:
      enabled: always # IntelliJ CE Console Color
  application:
    name: community-service
  datasource:
    driver-class-name: org.h2.Driver
    url: jdbc:h2:tcp://localhost/~/community
    username: sa
    password:
  h2:
    console:
      enabled: true
      path: /h2-console
  #  datasource:
  #    url: jdbc:postgresql://localhost:5432/commdb
  #    username: postgres
  #    password: 1234
  #    driver-class-name: org.postgresql.Driver
  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
    defer-datasource-initialization: true
    hibernate.ddl-auto: create
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.H2Dialect
        format_sql: true
        default_batch_fetch_size: 100
    database: postgresql
  sql:
    init:
      encoding: utf-8
      mode: always

eureka:
  instance:
    hostname: localhost
    #    prefer-ip-address: true
    instance-id: ${spring.application.name}:${spring.application.instance_id:${random.value}}
  client:
    # Eureka 서버 등록
    register-with-eureka: true
    # Eureka 서버로부터 인스턴스 정보를 주기적으로 가져오는 기능
    fetch-registry: true
    # Eureka 서버 위치 등록
    service-url:
      # endpoint 지정
      defaultZone: http://localhost:8761/eureka

feign:
  client:
    config:
      default:
        connectTimeout: 5000
        readTimeout: 5000
