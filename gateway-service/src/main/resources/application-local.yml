server:
  port: 8000

eureka:
  instance:
    hostname: localhost
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://localhost:8761/eureka

spring:
  application:
    name: gateway-service
  cloud:
    gateway:
      routes: # 라우팅 설정
        # Auth Service
        - id: auth-service
          predicates:
            - Path=/auth-service/**
          uri: lb://MEMBER-SERVICE # AuthService 는 MemberService 모듈 안에서 관리
          filters:
            - RewritePath=/auth-service/?(?<segment>.*), /$\{segment}

        # Member Service
        - id: member-service # 구분하기 위한 id 값으로 임의로 작성해도 무관
          predicates: # 조건
            - Path=/member-service/** # 패턴으로 요청이 들어오면
          uri: lb://MEMBER-SERVICE # 유레카 서버에서 MEMBER-SERVICE 를 찾아서 그곳으로 요청을 보낸다.
          filters:
            - AuthorizationFilter
            - RewritePath=/member-service/?(?<segment>.*), /$\{segment} # /member-service/xxx 로 요청이 오면 /xxx 로 변경하여 요청한다.
        # Buddy Service Route Set
        - id: buddy-service-with-auth
          predicates:
            - Path=/buddy-service/**
          uri: lb://BUDDY-SERVICE
          filters:
            - AuthorizationFilter
            - RewritePath=/buddy-service/?(?<segment>.*), /$\{segment}
        - id: buddy-service-without-auth
          predicates:
            - Path=/buddy-service/v1/ping
          uri: lb://BUDDY-SERVICE
          filters:
            - RewritePath=/buddy-service/?(?<segment>.*), /$\{segment}
      default-filters:
        - DedupeResponseHeader=Access-Control-Allow-Origin Access-Control-Allow-Credentials
      globalcors:
        cors-configurations:
          '[/**]':
            allowedOrigins: 'http://localhost:3000'
            allow-credentials: true
            allowedHeaders: '*'
            allowedMethods:
              - PUT
              - GET
              - POST
              - DELETE
              - OPTIONS
jwt:
  key: ${JWT_KEY}