server:
  port: 50000

spring:
  application:
    name: member-service
  datasource:
    driver-class-name: org.h2.Driver
    url: jdbc:h2:mem:member
    username: sa
    password:
  h2:
    console:
      enabled: true
      path: /h2-console
  jpa:
    hibernate:
      ddl-auto: create
  kafka:
    bootstrap-servers: 34.64.196.150:19993
    consumer:
      group-id: member-service-group
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      properties:
        max.partition.fetch.bytes: 1048588 # 10MB
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
      properties:
        max.request.size: 1048588 # 10MB
    listener:
      missing-topics-fatal: false
eureka:
  instance:
    hostname: localhost
    instance-id: ${spring.application.name}:${spring.application.instance_id:${random.value}}
  client:
    # Eureka 서버 등록
    register-with-eureka: true
    # Eureka 서버로부터 인스턴스 정보를 주기적으로 가져오는 기능
    fetch-registry: true
    # Eureka 서버 위치 등록
    service-url:
      # endpoint 지정
      defaultZone: http://localhost:8761/eureka

swagger:
  servers:
    title: "Member Service Swagger"
    version: "V1"
    url: http://localhost:8000/${spring.application.name}
    description: Local MemberService

feign:
  client:
    config:
      default:
        connectTimeout: 5000
        readTimeout: 5000

oauth:
  kakao:
    client_id: ${KAKAO_CLIENT_ID}
    local_redirect_uri: ${KAKAO_REDIRECT_URI}
    dev_redirect_uri: ${KAKAO_REDIRECT_URI}
    prd_redirect_uri: ${KAKAO_REDIRECT_URI}
    client_secret: ${KAKAO_CLIENT_SECRET}
    scope: profile_image, account_email
    code_uri: https://kauth.kakao.com/oauth/authorize
    token_uri: https://kauth.kakao.com/oauth/token
    resource_uri: https://kapi.kakao.com/v2/user/me
  naver:
    client_id: ${NAVER_CLIENT_ID}
    local_redirect_uri: ${NAVER_REDIRECT_URI}
    dev_redirect_uri: ${NAVER_REDIRECT_URI}
    prd_redirect_uri: ${NAVER_REDIRECT_URI}
    client_secret: ${NAVER_CLIENT_SECRET}
    state: ${NAVER_STATE}
    code_uri: https://nid.naver.com/oauth2.0/authorize
    token_uri: https://nid.naver.com/oauth2.0/token
    resource_uri: https://openapi.naver.com/v1/nid/me
  google:
    client_id: ${GOOGLE_CLIENT_ID}
    local_redirect_uri: ${GOOGLE_REDIRECT_URI}
    dev_redirect_uri: ${GOOGLE_REDIRECT_URI}
    prd_redirect_uri: ${GOOGLE_REDIRECT_URI}
    client_secret: ${GOOGLE_CLIENT_SECRET}
    scope: https://www.googleapis.com/auth/userinfo.email https://www.googleapis.com/auth/userinfo.profile
    code_uri: https://accounts.google.com/o/oauth2/v2/auth
    token_uri: https://oauth2.googleapis.com/token
    resource_uri: https://www.googleapis.com/oauth2/v2/userinfo

jwt:
  key: ${JWT_KEY}

cloud:
  aws:
    credentials:
      access-key: ${S3_ACCESS_KEY}
      secret-key: ${S3_SECRET_KEY}
    s3:
      bucket: ${S3_BUCKET}
      cloud-front: https://d1pjflw6c3jt4r.cloudfront.net
    region:
      static: ap-northeast-2
      info: ap-northeast-2
task:
  topic:
    user-pool-preferences: buddyservice.task.user-pool-preferences-local
    user-concept-preferences: buddyservice.task.user-concept-preferences-local
    ®common-noti: memberservice.task.noti-local